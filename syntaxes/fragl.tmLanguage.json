{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "FRAGL",
	"scopeName": "source.fragl",
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#tag-interior"
		},
		{
			"include": "#tag"
		},
		{
			"include": "#reference"
		}
	],
	"repository": {
		"number": {
			"patterns": [
				{
					"name": "constant.numeric.hex.fragl",
					"match": "\\b(?<!\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\b(?!\\$)",
					"captures": {
						"1": {
							"name": "storage.type.numeric.bigint.fragl"
						}
					}
				},
				{
					"name": "constant.numeric.binary.fragl",
					"match": "\\b(?<!\\$)0(?:b|B)[01][01_]*(n)?\\b(?!\\$)",
					"captures": {
						"1": {
							"name": "storage.type.numeric.bigint.fragl"
						}
					}
				},
				{
					"name": "constant.numeric.octal.fragl",
					"match": "\\b(?<!\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\b(?!\\$)",
					"captures": {
						"1": {
							"name": "storage.type.numeric.bigint.fragl"
						}
					}
				},
				{
					"match": "(?x)\n(?<!\\$)(?:\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\b)| # 1.1E+3\n  (?:\\b[0-9][0-9_]*(\\.)[eE][+-]?[0-9][0-9_]*(n)?\\b)|             # 1.E+3\n  (?:\\B(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\b)|             # .1E+3\n  (?:\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\b)|                 # 1E+3\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b)|                      # 1.1\n  (?:\\b[0-9][0-9_]*(\\.)(n)?\\B)|                                  # 1.\n  (?:\\B(\\.)[0-9][0-9_]*(n)?\\b)|                                  # .1\n  (?:\\b[0-9][0-9_]*(n)?\\b(?!\\.))                                 # 1\n)(?!\\$)",
					"captures": {
						"0": {
							"name": "constant.numeric.decimal.fragl"
						},
						"1": {
							"name": "meta.delimiter.decimal.period.fragl"
						},
						"2": {
							"name": "storage.type.numeric.bigint.fragl"
						},
						"3": {
							"name": "meta.delimiter.decimal.period.fragl"
						},
						"4": {
							"name": "storage.type.numeric.bigint.fragl"
						},
						"5": {
							"name": "meta.delimiter.decimal.period.fragl"
						},
						"6": {
							"name": "storage.type.numeric.bigint.fragl"
						},
						"7": {
							"name": "storage.type.numeric.bigint.fragl"
						},
						"8": {
							"name": "meta.delimiter.decimal.period.fragl"
						},
						"9": {
							"name": "storage.type.numeric.bigint.fragl"
						},
						"10": {
							"name": "meta.delimiter.decimal.period.fragl"
						},
						"11": {
							"name": "storage.type.numeric.bigint.fragl"
						},
						"12": {
							"name": "meta.delimiter.decimal.period.fragl"
						},
						"13": {
							"name": "storage.type.numeric.bigint.fragl"
						},
						"14": {
							"name": "storage.type.numeric.bigint.fragl"
						}
					}
				}
			]
		},
		"param-then-attributes": {
			"patterns": [
				{
					"include": "#parameter-list"
				},
				{
					"include": "#attribute"
				}
			]
		},
		"class-instantiation": {
			"patterns": [
				{
					"begin": "(::)([a-zA-Z][.0-9_a-zA-Z]*)\\s*(\\()",
					"beginCaptures": {
						"1": { "name": "storage.type.class.fragl" },
						"2": { "name": "entity.name.class.fragl" },
						"3": { "name": "punctuation.definition.class.parameter-list.begin.fragl"}
					},
					"end": "\\)",
					"endCaptures": {
						"0": { "name": "punctuation.definition.class.parameter-list.end.fragl" }
					},
					"name": "meta.class-instantiation.fragl",
					"patterns": [
						{
							"include": "#argument"
						}
					]
				},
				{
					"begin": "(::)([a-zA-Z][.0-9_a-zA-Z]*)\\s*(\\[)",
					"beginCaptures": {
						"1": { "name": "storage.type.class.fragl" },
						"2": { "name": "entity.name.class.fragl" },
						"3": { "name": "punctuation.definition.class.class-parameter-list.begin.fragl"}
					},
					"end": "\\]",
					"endCaptures": {
						"0": { "name": "punctuation.definition.class.class-parameter-list.end.fragl" }
					},
					"name": "meta.class-instantiation.class-parameters.fragl",
					"patterns": [
						{
							"include": "#argument"
						}
					]
				}
			]
		},
		"attribute": {
			"patterns": [
				{
					"include": "#class-instantiation"
				},
				{
					"match": "(?<!<)(::)([a-zA-Z][.0-9_a-zA-Z]*)\\s*(?!\\()",
					"captures": {
						"1": { "name": "storage.type.class.fragl" },
						"2": { "name": "entity.name.class.fragl" }
					},
					"name": "meta.tag.class.$2.opening.fragl"
				},
				{
					"begin": "([^\\x{0020}\\x{002C}\"'<>/=\\x{0000}-\\x{001F}\\x{007B}-\\x{007D}\\x{007F}-\\x{009F}\\x{FDD0}-\\x{FDEF}\\x{FFFE}\\x{FFFF}\\x{1FFFE}\\x{1FFFF}\\x{2FFFE}\\x{2FFFF}\\x{3FFFE}\\x{3FFFF}\\x{4FFFE}\\x{4FFFF}\\x{5FFFE}\\x{5FFFF}\\x{6FFFE}\\x{6FFFF}\\x{7FFFE}\\x{7FFFF}\\x{8FFFE}\\x{8FFFF}\\x{9FFFE}\\x{9FFFF}\\x{AFFFE}\\x{AFFFF}\\x{BFFFE}\\x{BFFFF}\\x{CFFFE}\\x{CFFFF}\\x{DFFFE}\\x{DFFFF}\\x{EFFFE}\\x{EFFFF}\\x{FFFFE}\\x{FFFFF}\\x{10FFFE}\\x{10FFFF}]+)",
					"beginCaptures": {
						"0": {
							"name": "entity.other.attribute-name.fragl"
						}
					},
					"comment": "Unicode key-value attributes",
					"end": "(?=\\s*+[^=\\s])",
					"name": "meta.attribute.$1.fragl",
					"patterns": [
						{
							"include": "#attribute-interior"
						}
					]
				},
				{
					"match": "[^\\s>]+",
					"name": "invalid.illegal.character-not-allowed-here.fragl"
				}
			]
		},
		"attribute-interior": {
			"patterns": [
				{
					"begin": "=",
					"beginCaptures": {
						"0": {
							"name": "punctuation.separator.key-value.fragl"
						}
					},
					"end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
					"patterns": [
						{
							"match": "([^\\s\"#=<>`/]|/(?!>))+",
							"name": "string.unquoted.fragl"
						},
						{
							"include": "#reference"
						},
						{
							"begin": "\"",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.string.begin.fragl"
								}
							},
							"end": "\"",
							"endCaptures": {
								"0": {
									"name": "punctuation.definition.string.end.fragl"
								}
							},
							"name": "string.quoted.fragl",
							"patterns": []
						},
						{
							"match": "=",
							"name": "invalid.illegal.unexpected-equals-sign.fragl"
						}
					]
				}
			]
		},
		"string": {
			"name": "string.quoted.double.fragl",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.fragl",
					"match": "\\\\."
				}
			]
		},
		"comment": {
			"begin": "<!--",
			"captures": {
				"0": {
					"name": "punctuation.definition.comment.fragl"
				}
			},
			"end": "-->",
			"name": "comment.block.fragl",
			"patterns": [
				{
					"match": "\\G-?>",
					"name": "invalid.illegal.characters-not-allowed-here.fragl"
				},
				{
					"match": "<!--(?!>)|<!-(?=-->)",
					"name": "invalid.illegal.characters-not-allowed-here.fragl"
				},
				{
					"match": "--!>",
					"name": "invalid.illegal.characters-not-allowed-here.fragl"
				}
			]
		},
		"constant": {
			"patterns": [
				{
					"match": "nil",
					"name": "constant.language.null.fragl"
				},
				{
					"match": "infinity",
					"name": "constant.language.infinity.fragl"
				},
				{
					"match": "true|false",
					"name": "constant.language.boolean.fragl"
				}
			]
		},
		"operator": {
			"patterns": [
				{
					"match": "(?<!<)@(?=[a-zA-Z]|\\()",
					"name": "keyword.control.iterator.fragl"
				},
				{
					"match": "\\b(?:add|sub|mul|div|rem|pow|trunc|round|floor|ceil)\\b",
					"name": "keyword.operator.math.fragl"
				},
				{
					"match": "\\b(?:eq|ne|gt|lt|ge|le|is|of|like)\\b",
					"name": "keyword.operator.comparison.fragl"
				},
				{
					"match": "\\b(?:and|or|xor|then|else|implies|iff)\\b",
					"name": "keyword.operator.logical.fragl"
				},
				{
					"match": "\\^?ff\\^?",
					"name": "keyword.operator.flip-flop.fragl"
				},
				{
					"match": "\\?\\?|!!",
					"name": "keyword.control.ternary.fragl"
				},
				{
					"match": "(?:\\+|~|\\$|\\?|!|\\*|`)(?=[.a-zA-Z0-9])",
					"name": "keyword.control.unary.fragl"
				}
			]
		},
		"argument": {
			"patterns": [
				{ "include": "#comment" },
				{ "include": "#class-instantiation" },
				{ "include": "#constant" },
				{ "include": "#number" },
				{ "include": "#operator" },
				{
					"begin": "\\(",
					"beginCaptures": {
						"0": { "name": "punctuation.definition.sequence-literal.begin.fragl" }
					},
					"end": "\\)",
					"endCaptures": {
						"0": { "name": "punctuation.definition.sequence-literal.end.fragl" }
					},
					"name": "meta.sequence-literal.fragl",
					"patterns": [
						{
							"include": "#argument"
						}
					]
				},
				{
					"begin": "\\[",
					"beginCaptures": {
						"0": { "name": "punctuation.definition.block-literal.begin.fragl" }
					},
					"end": "]",
					"endCaptures": {
						"0": { "name": "punctuation.definition.block-literal.end.fragl" }
					},
					"name": "meta.block-literal.fragl",
					"patterns": [
						{
							"include": "#argument"
						}
					]
				},
				{
					"begin": "(?<=])\\s*(?=\\{)",
					"end": "(?<=\\})",
					"name": "meta.function.anonymous.parameter-list.fragl",
					"patterns": [
						{
							"include": "#parameter-list"
						}
					]
				},
				{
					"include": "#string"
				},
				{
					"begin": "([a-zA-Z][0-9_a-zA-Z]*)\\s*(\\()",
					"beginCaptures": {
						"1": { "name": "entity.name.function.fragl" },
						"2": { "name": "punctuation.definition.function.argument-list.begin.fragl" }
					},
					"end": "\\)",
					"endCaptures": {
						"0": { "name": "punctuation.definition.function.argument-list.end.fragl" }
					},
					"name": "meta.function-invocation.fragl",
					"patterns": [
						{
							"include": "#argument"
						}
					]
				},
				{
					"match": "(?<!\\w)\\.\\.(?:\\.(?=\\w)|(?!\\w))",
					"name": "keyword.control.this.fragl"
				},
				{
					"match": "(?<!\\w)%(?!\\w)",
					"name": "variable.language.slurp.fragl"
				},
				{
					"match": "(')([a-zA-Z][0-9_a-zA-Z]*)\\b",
					"name": "meta.variable.name.shadowed.fragl",
					"captures": {
						"1": { "name": "storage.type.modifier.shadow.fragl" },
						"2": { "name": "entity.name.label.object.shadowed.fragl" }
					}
				},
				{
					"match": "\\b(?<!')[a-zA-Z][0-9_a-zA-Z]*\\b",
					"name": "variable.name.fragl"
				}
			]
		},
		"parameter-list": {
			"begin": "{",
			"end": "}",
			"name": "meta.parameter-list.fragl",
			"patterns": [
				{
					"match": "(?<!\\w)_(?!\\w)",
					"name": "punctuation.definition.tag.parameter.skipped.fragl"
				},
				{
					"match": "(@)([a-zA-Z][.0-9_a-zA-Z]*)\\b",
					"name": "meta.parameter.modifier.fragl",
					"captures": {
						"1": { "name": "keyword.control.slurp.fragl" },
						"2": { "name": "variable.parameter.$2.fragl"}
					}
				},
				{
					"match": "(%)([a-zA-Z][.0-9_a-zA-Z]*)\\b",
					"name": "meta.parameter.modifier.fragl",
					"captures": {
						"1": { "name": "storage.type.accumulator.fragl" },
						"2": { "name": "entity.name.shadowed.$2.fragl"}
					}
				},
				{
					"match": "\\b[a-zA-Z][.0-9_a-zA-Z]*\\b",
					"name": "variable.parameter.fragl"
				},
				{
					"match": "(::)([a-zA-Z][.0-9_a-zA-Z]*)\\b",
					"name": "meta.parameter.modifier.fragl",
					"captures": {
						"1": { "name": "storage.type.class.fragl" },
						"2": { "name": "entity.name.class.$2.fragl"}
					}
				},
				{ "include": "#constant" },
				{ "include": "#number" },
				{ "include": "#string" }
			]
		},
		"reference": {
			"patterns": [
				{
					"match": "(#)([a-zA-Z][.0-9_a-zA-Z]*)",
					"captures": {
						"1": { "name": "keyword.operator.reference.fragl" },
						"2": { "name": "variable.name.reference.fragl" }
					}
				},
				{
					"begin": "(#)(:)?([a-zA-Z][.0-9_a-zA-Z]*)?(\\()",
					"beginCaptures": {
						"1": { "name": "keyword.operator.reference.fragl" },
						"2": { "name": "storage.type.class.fragl" },
						"3": { "name": "entity.name.class.fragl" },
						"4": { "name": "punctuation.definition.template-expression.begin.fragl" }
					},
					"end": "\\)",
					"endCaptures": {
						"0": { "name": "punctuation.definition.template-expression.end.fragl" }
					},
					"name": "meta.reference-expression.fragl",
					"patterns": [
						{
							"include": "#argument"
						}
					]
				},
				{
					"begin": "#\\[",
					"beginCaptures": {
						"0": { "name": "punctuation.definition.tag.reference-effect.begin.fragl" }
					},
					"end": "]",
					"endCaptures": {
						"0": { "name": "punctuation.definition.tag.reference-effect.end.fragl" }
					},
					"name": "meta.reference-effect.fragl",
					"patterns": [
						{
							"include": "#argument"
						}
					]
				}
			]
		},
		"tag-expression": {
			"patterns": [
				{
					"begin": "(?<!<)<(?!<|=)",
					"beginCaptures": {
						"0": { "name": "punctuation.definition.tag.begin.fragl" }
					},
					"end": "/>",
					"endCaptures": {
						"0": { "name": "punctuation.definition.tag.end.fragl" }
					},
					"name": "meta.tag.expression.fragl",
					"patterns": [
						{ "include": "#argument" }
					]
				}
			]
		},
		"tag-interior": {
			"patterns": [
				{
					"begin": "<(?=::\\s*[a-zA-Z][.0-9_a-zA-Z]*\\s*{)",
					"beginCaptures": {
						"0": { "name": "punctuation.definition.tag.opening.begin.fragl" }
					},
					"end": "(</)\\s*([a-zA-Z][.0-9_a-zA-Z]*)\\s*(>)",
					"endCaptures": {
						"1": { "name": "punctuation.definition.tag.closing.begin.fragl" },
						"2": { "name": "entity.name.class.fragl" },
						"3": { "name": "punctuation.definition.tag.closing.end.fragl" }
					},
					"name": "meta.tag.class.interior.fragl",
					"patterns": [
						{
							"match": "<\\|>",
							"name": "punctuation.definition.tag.alternate.fragl"
						},
						{ "include": "$self" }
					]
				},
				{
					"begin": "<(?=@\\s*[a-zA-Z][.0-9_a-zA-Z]*\\s*{)",
					"beginCaptures": {
						"0": { "name": "punctuation.definition.tag.opening.begin.fragl" }
					},
					"end": "(</)\\s*([a-zA-Z][.0-9_a-zA-Z]*)?\\s*(>)",
					"endCaptures": {
						"1": { "name": "punctuation.definition.tag.closing.begin.fragl" },
						"2": { "name": "variable.other.loop.nominal.fragl" },
						"3": { "name": "punctuation.definition.tag.closing.end.fragl" }
					},
					"name": "meta.tag.loop.interior.fragl",
					"patterns": [
						{ "include": "$self" }
					]
				},
				{
					"begin": "<(?=@\\s*[\\(\\[])",
					"beginCaptures": {
						"0": { "name": "punctuation.definition.tag.loop.opening.begin.fragl" }
					},
					"end": "</\\s*>",
					"endCaptures": {
						"0": { "name": "punctuation.definition.tag.loop.closing.fragl" }
					},
					"name": "meta.tag.loop.interior.fragl",
					"patterns": [
						{ "include": "$self" }
					]
				},
				{
					"begin": "<(?=(?:\\?|&)\\s*\\()",
					"beginCaptures": {
						"0": { "name": "punctuation.definition.tag.cond.opening.begin.fragl" }
					},
					"end": "</\\s*>",
					"endCaptures": {
						"0": { "name": "punctuation.definition.tag.cond.closing.fragl" }
					},
					"name": "meta.tag.cond.interior.fragl",
					"patterns": [
						{
							"match": "(<)(:)(>)",
							"captures": {
								"1": { "name": "punctuation.definition.tag.cond.else.begin.fragl" },
								"2": { "name": "keyword.control.cond.else.fragl" },
								"3": { "name": "punctuation.definition.tag.cond.else.endfragl" }
							}
						},
						{ "include": "$self" }
					]
				},
				{
					"begin": "<(?=(?:\\?|&)\\s*[a-zA-Z][.0-9_a-zA-Z]*\\s*\\()",
					"beginCaptures": {
						"0": { "name": "punctuation.definition.tag.cond.opening.begin.fragl" }
					},
					"end": "(</)\\s*([a-zA-Z][.0-9_a-zA-Z]*|\\.\\.)\\s*(>)",
					"endCaptures": {
						"1": { "name": "punctuation.definition.tag.cond.closing.fragl" },
						"2": { "name": "entity.name.function.fragl" },
						"3": { "name": "punctuation.definition.tag.cond.closing.fragl" }
					},
					"name": "meta.tag.conrol.invocation.interior.fragl",
					"patterns": [
						{
							"match": "(<)(:)(>)",
							"captures": {
								"1": { "name": "punctuation.definition.tag.cond.else.begin.fragl" },
								"2": { "name": "keyword.control.cond.else.fragl" },
								"3": { "name": "punctuation.definition.tag.cond.else.endfragl" }
							}
						},
						{ "include": "$self" }
					]
				},
				{
					"begin": "<(?=(?:\\?|&)\\s*[a-zA-Z][.0-9_a-zA-Z]*)",
					"beginCaptures": {
						"0": { "name": "punctuation.definition.tag.cond.opening.begin.fragl" }
					},
					"end": "(</)\\s*([a-zA-Z][.0-9_a-zA-Z]*)\\s*(>)",
					"endCaptures": {
						"1": { "name": "punctuation.definition.tag.cond.closing.fragl" },
						"2": { "name": "entity.name.variable.fragl" },
						"3": { "name": "punctuation.definition.tag.cond.closing.fragl" }
					},
					"name": "meta.tag.conrol.interior.fragl",
					"patterns": [
						{
							"match": "(<)(:)(>)",
							"captures": {
								"1": { "name": "punctuation.definition.tag.cond.else.begin.fragl" },
								"2": { "name": "keyword.control.cond.else.fragl" },
								"3": { "name": "punctuation.definition.tag.cond.else.endfragl" }
							}
						},
						{ "include": "$self" }
					]
				},
				{
					"begin": "<(?=%\\s*\\.?[a-zA-Z][.0-9_a-zA-Z]*\\s*\\()",
					"beginCaptures": {
						"0": { "name": "punctuation.definition.tag.opening.begin.fragl" }
					},
					"end": "(</)\\s*([a-zA-Z][.0-9_a-zA-Z]*)\\s*(>)",
					"endCaptures": {
						"1": { "name": "punctuation.definition.tag.closing.begin.fragl" },
						"2": { "name": "entity.name.function.fragl" },
						"3": { "name": "punctuation.definition.tag.closing.end.fragl" }
					},
					"name": "meta.tag.invocation.interior.fragl",
					"patterns": [
						{ "include": "$self" }
					]
				},
				{
					"begin": "<(?=\\s*(?:[a-zA-Z][.0-9_a-zA-Z]*|\\.\\.)\\s*{)",
					"beginCaptures": {
						"0": { "name": "punctuation.definition.tag.opening.begin.fragl" }
					},
					"end": "(</)\\s*([a-zA-Z][.0-9_a-zA-Z]*|\\.\\.)\\s*(>)",
					"endCaptures": {
						"1": { "name": "punctuation.definition.tag.closing.begin.fragl" },
						"2": { "name": "entity.name.function.fragl" },
						"3": { "name": "punctuation.definition.tag.closing.end.fragl" }
					},
					"name": "meta.tag.function.interior.fragl",
					"patterns": [
						{ "include": "$self" }
					]
				},
				{
					"begin": "<(?=\\s*_[a-zA-Z][.0-9_a-zA-Z]*_\\s*{)",
					"beginCaptures": {
						"0": { "name": "punctuation.definition.tag.opening.begin.fragl" }
					},
					"end": "(</)\\s*(_)([a-zA-Z][.0-9_a-zA-Z]*)(_)\\s*(>)",
					"endCaptures": {
						"1": { "name": "punctuation.definition.tag.closing.begin.fragl" },
						"2": { "name": "punctuation.definition.template-expression.begin.custom-operator.fragl" },
						"3": { "name": "keyword.operator.custom.fragl" },
						"4": { "name": "punctuation.definition.template-expression.end.custom-operator.fragl" },
						"5": { "name": "punctuation.definition.tag.closing.end.fragl" }
					},
					"name": "meta.tag.function.interior.fragl",
					"patterns": [
						{ "include": "$self" }
					]
				},
				{
					"begin": "=<(?=\\s*[a-zA-Z].*>=)",
					"beginCaptures": {
						"0": { "name": "punctuation.definition.tag.opening.begin.fragl" }
					},
					"end": "(</)\\s*([a-zA-Z][.0-9_a-zA-Z]*)\\s*(>)",
					"endCaptures": {
						"1": { "name": "punctuation.definition.tag.closing.begin.fragl" },
						"2": { "name": "entity.name.tag.case.fragl" },
						"3": { "name": "punctuation.definition.tag.closing.end.fragl" }
					},
					"name": "meta.tag.case.interior.fragl",
					"patterns": [
						{ "include": "$self" }
					]
				},
								{
					"begin": "<(?='{1,3}\\s*[a-zA-Z][.0-9_a-zA-Z]*(?:\\:\\:[a-zA-Z][.0-9_a-zA-Z]*\\(.*?\\)>|\\:\\:[a-zA-Z][.0-9_a-zA-Z]*>|\\s[a-zA-Z].*?>|>))",
					"beginCaptures": {
						"0": { "name": "punctuation.definition.tag.opening.begin.fragl" }
					},
					"end": "(</)\\s*([a-zA-Z][.0-9_a-zA-Z]*)\\s*(>)",
					"endCaptures": {
						"1": { "name": "punctuation.definition.tag.closing.begin.fragl" },
						"2": { "name": "entity.name.label.object.shadowed.fragl" },
						"3": { "name": "punctuation.definition.tag.closing.end.fragl" }
					},
					"name": "meta.tag.object.interior.fragl",
					"patterns": [
						{ "include": "$self" }
					]
				},
				{
					"begin": "<(?=\\s*[a-zA-Z][.0-9_a-zA-Z]*(?:\\:\\:[a-zA-Z][.0-9_a-zA-Z]*\\(.*?\\)>|\\:\\:[a-zA-Z][.0-9_a-zA-Z]*>|\\s[a-zA-Z].*?>|>))",
					"beginCaptures": {
						"0": { "name": "punctuation.definition.tag.opening.begin.fragl" }
					},
					"end": "(</)\\s*([a-zA-Z][.0-9_a-zA-Z]*)\\s*(>)",
					"endCaptures": {
						"1": { "name": "punctuation.definition.tag.closing.begin.fragl" },
						"2": { "name": "entity.name.tag.object.fragl" },
						"3": { "name": "punctuation.definition.tag.closing.end.fragl" }
					},
					"name": "meta.tag.object.interior.fragl",
					"patterns": [
						{ "include": "$self" }
					]
				}
			]
		},
		"tag": {
			"patterns": [
				{
					"begin": "(?<=<)(::)\\s*([a-zA-Z][.0-9_a-zA-Z]*)(?=[\\{\\[])(?!.*/>)",
					"beginCaptures": {
						"1": { "name": "storage.type.class.fragl" },
						"2": { "name": "entity.name.class.fragl" }
					},
					"end": ">",
					"endCaptures": {
						"0": { "name": "punctuation.definition.tag.opening.end.fragl" }
					},
					"name": "meta.tag.class.$2.opening.fragl",
					"patterns": [
						{
							"begin": "\\[",
							"end": "\\]",
							"name": "meta.parameter-list.class.fragl",
							"patterns": [
								{
									"match": "\\b[a-zA-Z][.0-9_a-zA-Z]*\\b",
									"name": "storage.class.parameter.fragl"
								}
							]
						},
						{ "include": "#param-then-attributes" }
					]
				},
				{
					"begin": "(?<=<)(@)\\s*([a-zA-Z][.0-9_a-zA-Z]*)(?=\\s*{)",
					"beginCaptures": {
						"1": { "name": "keyword.control.tag.loop.fragl" },
						"2": { "name": "variable.name.loop.fragl" }
					},
					"end": ">",
					"endCaptures": {
						"0": { "name": "punctuation.definition.tag.opening.end.fragl" }
					},
					"name": "meta.tag.loop.for-in.fragl",
					"patterns": [
						{ "include": "#param-then-attributes" }
					]
				},
				{
					"begin": "(?<=<)(\\?)\\s*([a-zA-Z][.0-9_a-zA-Z]*)",
					"beginCaptures": {
						"1": { "name": "keyword.control.tag.cond.fragl" },
						"2": { "name": "variable.name.cond.fragl" }
					},
					"end": ">",
					"endCaptures": {
						"0": { "name": "punctuation.definition.tag.opening.end.fragl" }
					},
					"name": "meta.tag.cond.variable.fragl",
					"patterns": [
						{ "include": "#param-then-attributes" }
					]
				},
				{
					"begin": "(?<=<)(@)\\s*(?=\\()",
					"beginCaptures": {
						"1": { "name": "keyword.control.tag.loop.fragl" },
						"2": { "name": "punctuation.definition.loop.literal-list.begin.fragl" }
					},
					"end": "(?<=\\)|\\})\\s*(>)",
					"endCaptures": {
						"1": { "name": "punctuation.definition.tag.loop.opening.end.fragl" }
					},
					"name": "meta.tag.loop.for-in.literal.fragl",
					"patterns": [
						{
							"begin": "\\(",
							"beginCaptures": {
								"0": { "name": "punctuation.definition.sequence-literal.begin.fragl" }
							},
							"end": "\\)",
							"endCaptures": {
								"0": { "name": "punctuation.definition.sequence-literal.end.fragl" }
							},
							"name": "meta.for-in.sequence-literal.fragl",
							"patterns": [
								{ "include": "#argument" }
							]
						},
						{ "include": "#parameter-list" }
					]
				},
								{
					"begin": "(?<=<)(&)\\s*(\\()",
					"beginCaptures": {
						"1": { "name": "keyword.control.tag.cond.expression.fragl" },
						"2": { "name": "punctuation.definition.loop.literal-list.begin.fragl" }
					},
					"end": "(\\))\\s*(>)",
					"endCaptures": {
						"1": { "name": "punctuation.definition.loop.literal-list.end.fragl" },
						"2": { "name": "punctuation.definition.tag.loop.opening.end.fragl" }
					},
					"name": "meta.tag.loop.for-in.literal.fragl",
					"patterns": [
						{ "include": "#argument" }
					]
				},
				{
					"begin": "(?<=<)\\s*(\\?|&)\\s*([a-zA-Z][.0-9_a-zA-Z]*)?(\\()",
					"beginCaptures": {
						"1": { "name": "keyword.control.tag.cond.fragl" },
						"2": { "name": "entity.name.function.fragl" },
						"3": { "name": "punctuation.definition.cond.argument-list.begin.fragl" }
					},
					"end": "(\\))\\s*(>)",
					"endCaptures": {
						"1": { "name": "punctuation.definition.cond.argument-list.end.fragl" },
						"2": { "name": "punctuation.definition.tag.cond.opening.end.fragl" }
					},
					"name": "meta.tag.control.expression.fragl",
					"patterns": [
						{ "include": "#argument" }
					]
				},
				{
					"begin": "(?<=<)\\s*([a-zA-Z][.0-9_a-zA-Z]*|\\.\\.)(?=\\s*{)",
					"beginCaptures": {
						"1": { "name": "entity.name.function.fragl" }
					},
					"end": ">",
					"endCaptures": {
						"0": { "name": "punctuation.definition.tag.opening.end.fragl" }
					},
					"name": "meta.tag.function.$1.opening.fragl",
					"patterns": [
						{ "include": "#param-then-attributes" }
					]
				},
				{
					"begin": "(?<=<)(%)\\s*(\\.)?(?:([a-zA-Z][.0-9_a-zA-Z]*)(\\.))*([a-zA-Z][.0-9_a-zA-Z]*)(?=\\s*\\()",
					"beginCaptures": {
						"1": { "name": "keyword.control.tag.invocation.fragl" },
						"2": { "name": "punctuation.definition.member-access.fragl" },
						"3": { "name": "entity.name.object.fragl" },
						"4": { "name": "punctuation.definition.member-access.fragl" },
						"5": { "name": "entity.name.function.fragl" }
					},
					"end": ">",
					"endCaptures": {
						"0": { "name": "punctuation.definition.tag.opening.end.fragl" }
					},
					"name": "meta.tag.function.$5.invocation.opening.fragl",
					"patterns": [
						{ "include": "#argument" }
					]
				},
				{
					"begin": "(?<=<)\\s*(_)([a-zA-Z][.0-9_a-zA-Z]*)(_)(?=\\s*{)",
					"beginCaptures": {
						"1": { "name": "punctuation.definition.template-expression.begin.custom-operator.fragl" },
						"2": { "name": "keyword.operator.custom.fragl" },
						"3": { "name": "punctuation.definition.template-expression.end.custom-operator.fragl" }
					},
					"end": ">",
					"endCaptures": {
						"0": { "name": "punctuation.definition.tag.opening.end.fragl" }
					},
					"name": "meta.tag.function.operator.$2.opening.fragl",
					"patterns": [
						{ "include": "#param-then-attributes" }
					]
				},
				{
					"begin": "(?<==<)\\s*([a-zA-Z][.0-9_a-zA-Z]*)(?=.*>=)",
					"beginCaptures": {
						"1": { "name": "entity.name.tag.object.case.fragl" }
					},
					"end": ">=",
					"endCaptures": {
						"0": { "name": "punctuation.definition.tag.opening.end.fragl" }
					},
					"name": "meta.tag.case.$1.opening.fragl",
					"patterns": [
						{ "include": "#attribute" }
					]
				},
				{
					"begin": "(?<=<)\\s*(')([a-zA-Z][.0-9_a-zA-Z]*)(?=[^/]*>)",
					"beginCaptures": {
						"1": { "name": "storage.type.modifier.shadow.fragl" },
						"2": { "name": "entity.name.label.object.shadowed.fragl" }
					},
					"end": ">",
					"endCaptures": {
						"0": { "name": "punctuation.definition.tag.opening.end.fragl" }
					},
					"name": "meta.tag.object.$1.opening.fragl",
					"patterns": [
						{ "include": "#attribute" }
					]
				},
				{
					"begin": "(?<=<)\\s*([a-zA-Z][.0-9_a-zA-Z]*)(?=[^/]*>)",
					"beginCaptures": {
						"1": { "name": "entity.name.tag.object.fragl" }
					},
					"end": ">",
					"endCaptures": {
						"0": { "name": "punctuation.definition.tag.opening.end.fragl" }
					},
					"name": "meta.tag.object.$1.opening.fragl",
					"patterns": [
						{ "include": "#attribute" }
					]
				},
				{
					"include": "#tag-expression"
				}
			]
		}
	}
}